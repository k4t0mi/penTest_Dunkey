Fingerprint Web Server :

1. nc google.com 80
2. Online Testing: https://www.netcraft.com/ :
    * http://www.terminally-incoherent.com/blog/2007/08/07/few-useful-netcat-tricks/
    * https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf
3.  try google hack with search field parameter as: “site: testphp.vulnweb.com” 

---------------------------------------------------------------------------------------------------------------
 Review Webserver Metafiles for Information Leakage :

1. Robots.txt :
   *  wget http://google.com/robots.txt 

----------------------------------------------------------------------------------
Enumerate Applications on Webserver:

1. nmap -sT -sV -p 0-65535 192.168.1.
2. Base Domain name: nslookup or dig
    * >nslookup 
       >set type=all 
       >example.com
3. Web-based DNS search: 
    * http://searchdns.netcraft.com/?host
4. Reverse IP:
    * http://whois.webhosting.info/ 
    * http://www.dnsstuff.com/


**Nessus Vulnerability Scanner. http://www.nessus.org 

-------------------------------------------------------------------------------------------------------
Review Webpage Comments and Metadata for Information Leakage :

1.Wget
2.Any browser
---------------------------------------------------------------------------------

Identify Application Entry Points:

In request: 
1.Identify where GETs are used and where POST are use 
2.Identify ALL parameters used in POST request (including hidden parameter and unhidden parameter) 
3.Identify ALL parameters used in GET request (usually after ? mark) 
4.Pay attention for parameters even if encoded or encrypted and identify which ones account who are process by application

In response: 
1.Identify and note any headers 
2.Identify where there are any redirects (300 HTTP status code), 400 status code, 403 particular forbidden and 500 internal server errors during normal response
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 Map execution paths:

Automatic Spider tools 
? Burp Suite
 ? ZAP & DirBuster
----------------------------------------------------------------------

 Fingerprint Web Application & Web Application Framework :

? HTTP headers: 
The most basic form of identifying a web application framework is to look at the X-Powered-By field in the HTTP response header. 
 ? Cookies: 
Another similar and somehow more reliable way to determine the current web framework are frameworkspecific cookies.
 ? HTML source code: 
This technique is based on finding certain patterns in the HTML page source code. We can find a lot of information which helps a tester to recognize a specific web application. 
 ? Specific files and folder: Every application has its own specific file and folder structure on the server. We can use tool or manual access them.
a- dirbuster
b- burpsuite intruder : with Common Application Identifiers
c- nikto : "nikto -h example.com"
d- whatweb : "whatweb examle.com"



