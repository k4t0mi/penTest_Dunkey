Test Network/Infrastructure Configuration : Review of the Application Architecture Known Server Vulnerabilities

1.Using Nessus Scan
2.List all the possible administrative interfaces: Local remote, Remote access via SFTP, Access via web interface – such as HTTP basic authentication 
* With insecure protocol like ftp, telnet or http basic authentication, easy to sniff administrator password with Wireshark 
**Recommend using Secure protocol such as: FTPs, SFTP, SSH, TLS/SSL,VPN
***Change default user & password 
-----------------------------------------------------------------------------------------------------------------------------

Test Application Platform Configuration :

Configuration review and testing is a critical task,  what is not essential should be removed before deployment to avoid post install exploitation
 1. Sample/known Files and Directory: Many web servers and application servers provide, in a default installation, sample applications and files  however later known to be vulnerable 
example: Wordpress version show in readme , Brute force attack / Denial of Service attack in Wordpress’s xmlrpc.php 
2. Comment on source code review
3. Configuration review :
    Some common guidelines should be taken into account: 
          ? Only enable server modules that are needed for application. (var/www)
          ? Handle server errors code with custom-made pages.
          ? Make sure server software runs with minimize privileges in the operating system.
          ? Make sure the server software logs properly both legitimate access and errors. (/var/log)
          ? Make sure that the server is configured to properly handle overloads and prevent Denial of Service attacks.
4. Logging: 
     *Sensitive information in logs: server logs might contain sensitive information 
     *Log Location : keep logs in a separate location, and not in the web server itself
     *Log rotation
     *Log contents:
? Do the logs contain sensitive information?
 ? Are the logs stored in a dedicated server?
 ? Can log usage generate a Denial of Service condition?
 ? How are log backups preserved? 
? Is the data being logged data validated (min/max length, chars etc) prior to being logged?
 ? How are logs reviewed? Can admin use these review to detect targeted attack?
 ? How are they rotated ?
 are logs kept for the sufficient time?
---------------------------------------------------------------------------------------------------------------------------------------------

 File Extensions Handling for Sensitive Information :

determine which technologies / languages / plugins must be used to fulfill the web request. 

1.The following file extensions should NEVER be returned by a web server:
 ? .asa   
? .inc 
Using google hack, easy to find them: "ext:asa inurl:www.maybole.org"

2.The following file extensions are related to files which, when accessed, are either displayed or downloaded by the browser.  checked to verify that they are indeed supposed to be served
 and that they do not contain sensitive information:
? .zip, .tar, .gz, .tgz, .rar, ...: (Compressed) archive files  
? .java: No reason to provide access to Java source files  
? .txt: Text files   ? .pdf: PDF documents ? .doc, .rtf, .xls, .ppt, ...: Office documents  
? .bak, .old and other extensions indicative of backup files (for example: ~ for Emacs backup files) 
Vulnerability scanner : 
-Nikto
-Spider tools: Zap
- Mirroring tools: httrack : "httrack http://ip.../