? FOOBAR /admin/createUser.php?member=myAdmin  
 ? JEFF /admin/changePw.php?member=myAdmin&passwd=foo123&confirm=foo123 
  ? CATS /admin/groupEdit.php?group=Admins&member=myAdmin&action=add 
 ? HEAD /admin/createUser.php?member=myAdmin

**With some luck, using the above three commands :
- modified to suit the application under test and testing requirements - a new user would be created, a password assigned, and made an admin.

2.
We should try to retrieve the policy files:
- crossdomain.xml 
 -clientaccesspolicy.xml
 from the application’s root and from every folder found

3.
test role definetion:
Spidering tools (Burp Suite) 
– Log on with each role in turn and spider the application 
(don’t forget to exclude the logout button/link from the spidering)
 With admin account, using spider option we have this below result and save this state to file 
Finally, use compare function to comparing two site map we’ve got 

4.
Test User Registration Process:
How to Test 
Test list 
? Determine who can register for access (anyone)?
 ? Are registrations are vetted by a human prior to provisioning or are they automatically granted if the criteria are met.
 ? Can the same person register multiple times?
 ? Can user register for different roles or permissions?
 ? What proof of identity is required for a registration to be successful?
 ? Are registered identities verified? ? Can identity information be easily forged or faked?
 ? Can the exchange of identity information be manipulated during registration process? 

5.
Test for a nonexistent username
Automate tools such as: WordPress enumeration username tools like wpscan 
wpscan: wpscan -u 192.168.1.1/wordpress -e u