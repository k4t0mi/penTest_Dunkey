Selenium: your partner in crime
What is Selenium?

Selenium 10 is a framework for testing web applications.

Selenium allows us to automate actions on browsers with a feature called Selenium WebDriver.

This driver accepts commands from the user and sends them to the browser to be executed.

These commands include:

    Typing keys in text boxes
    Clicking objects and buttons on a webpage
    Surfing to a webpage
    simulating mouse cursor movement and dragging objects
    Many more…

Selenium WebDriver currently supports automation with the following web browsers:

Chrome, Firefox, Safari, Edge, Internet Explorer.
*********************************************************
=============================
Using selenium::::::::;

python:

from selenium import webdriver 
driver = webdriver.Chrome()
driver.get("https://siteName.com")
************************************************
----------------------------------------
The code above will open a chrome browser and navigate to the link.  
-----------------------------------------------------------
To perform clicks and keyboards typing with website elements, we must find the element we wish to interact with and then perform our action.

One of the easiest ways to find the element we wish to interact with is by right clicking on the element we wish to interact with and clicking on inspect.

This action will show will open the html element’s code

We will then select copy->copy xpath to copy the XPath of the element. - XPath is an xml expression that we can use to navigate through different elements on a given webpage.

we can then search for this element with Selenium and click it:::::::::::::
****************************************************************
python code goes on:

button = driver.find_element_by_xpath('//*[@id="the xpath we copied"]/tr/td[1]')
button.click()
***********************************************************************************

command to cause Selenium controlled browser to appear like any normal user controled browser:
**************************************************************************************
driver:execute_cdp_cmd("Page.addScriptToEvaluateOnNewDocument", {
	"source:" """
			Object.defineProperty(navigator, 'webdriver', {
			  GET: () => UNDEFINED
			})
			"""
})

**************************************************************************************

install geckodriver ** needed for rununig selenium **
-->   https://selenium-python.readthedocs.io/getting-started.html

***************************************************************************************
https://github.com/x24whoamix24/bypass_geetest_slider/tree/master/captcha_solver

Solver for the geetest sliding captcha
CAPTCH SOLVER PYTHON CODE::::::::::::;


from selenium import webdriver
from captcha_solver.nocaptcha import CapatchaSolver
GEETEST_DEMO_PAGE = "https://www.geetest.com/en/demo"




def main():
    driver = webdriver.Chrome()
    driver.maximize_window()
    captcha_solver = CapatchaSolver(driver)
    # Goto demo page
    driver.get(GEETEST_DEMO_PAGE)
    # Scroll down to the end of the page
    # Find the slider test button and click it
    button = driver.find_element_by_xpath('//*[@id="gt-show-mobile"]/div/section[1]/div/div/div[2]')
    button.click()
    # Now that we have reached the slider test part, we can call our captcha sovler
    # class to solve the captcha for us
    captcha_solver.solve_captcha()

if __name__ == "__main__":
    main()

*********************************************************************************************
